  
type Gateway {
  uuid: String!
  marker: Marker @relation(name: "CONNECTED_MARKER", direction:"BOTH")
  x: Float
  y: Float
  z: Float
  ip_address: String
  mac_address: String
  active: Boolean
}

type Marker{
  id:ID!
  gateway: Gateway @relation(name: "CONNECTED_GATEWAY", direction: "BOTH")
  neighbors: [Marker] @relation(name: "LINKED_TO", direction: "BOTH")
  comments: [Comment] @relation(name: "COMMENT", direction: "OUT")
}

type Unconnected {
  id:ID!
  gateway: [Gateway] @cypher(statement: "MATCH (g:Gateway) WHERE NOT (g)-[:CONNECTED_MARKER]-() RETURN g")
}

type Connected {
  id: ID!
  gateway: [Gateway] @cypher(statement: "MATCH (g:Gateway) WHERE (g)-[:CONNECTED_MARKER]-() RETURN g")
}

type Comment{
  id:ID!
  author: String
  date: String
  content: String
}

type Tag {
  active: Boolean
}

type Query {
  UnconnectedGateways: [Gateway]! @cypher(statement:"""MATCH (g:Gateway) WHERE NOT (g)-[:CONNECTED_MARKER]->() RETURN g;""")
  UnconnectedMarkers: [Marker]! @cypher(statement:"""MATCH (m:Marker) WHERE NOT (m)-[:CONNECTED_GATEWAY]->() RETURN m;""")
}